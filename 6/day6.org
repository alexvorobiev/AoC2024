#+TITLE: Advent of Code 2024 Day 6
#+STARTUP: inlineimages
#+options: toc:2
#+property: header-args:j :session *J* :results verbatim
#+last_modified: 2025-01-02 00:04:31 alex

* Table of contents                                                     :TOC:
- [[#1][1]]
  - [[#data][Data]]
  - [[#rotate-matrix][Rotate matrix]]
  - [[#locate-][Locate ^]]
  - [[#travel-step][Travel step]]
  - [[#run][Run]]
- [[#org-configuration][org-configuration]]

* 1
** Data
#+begin_src j :tangle yes :results silent
  f =: 'input.txt'
#+end_src
#+begin_src j :results silent
  f =: 'test.txt'
#+end_src
#+begin_src j :tangle yes :results silent
  d =: >'b' freads f
#+end_src
** Rotate matrix
#+begin_src j :tangle yes :results silent
  rotR =: |."1 @: |:
  rotL =: rotR^:3
#+end_src

#+begin_src j
  m =: 3 3 $ i.9
  ]rotR m
  m = rotL @ rotR [ m
#+end_src

#+RESULTS:
: 6 3 0
: 7 4 1
: 8 5 2
:
: 1 1 1
: 1 1 1
: 1 1 1

** Locate ^
#+begin_src j
  ]v =: {.|: I. '^' = d
  ]r =: {.I. 0 < v
  ]c =: r { v
#+end_src

#+RESULTS:
: 0 0 0 0 0 0 4 0 0 0
:
: 6
:
: 4

** Travel step
Always travel to the right, so start with rotating the input to the right
#+begin_src j
  m =: rotR d
  ] p0 =: c, 9-r
  (9 - r) {c {m
#+end_src

#+RESULTS:
: 4 3
:
: ^

Search for the first '#' to the right in the same row
#+begin_src j
  ] t=: (9-r)}. c{m
  ] pound =: t i.'#'
#+end_src

#+RESULTS:
: ^.....#
:
: 6

#+begin_src j
  (< c ; ((9 - r) + i.pound)) {m
#+end_src

#+RESULTS:
: ^.....

Mark the intermediate locations with 'X's
#+begin_src j
  'X' (< c ; ((9 - r) + i.pound)) } m
#+end_src

#+RESULTS:
#+begin_example
.#........
...#......
......#...
..........
...XXXXXX#
..........
#.........
.....#....
..#.......
........#.
#+end_example

#+begin_src j :tangle yes :results silent
  M =: rotR d
  v0 =: {.|: I. '^' = M
  r0 =: {.I. 0 < v0
  c0 =: r0 { v0
#+end_src

Step to the right
#+begin_src j :tangle yes :results silent
  step =: 3 : 0
    'r c M' =. y
    pound =. (c}. r{M) i.'#'
    (((#M) - c) - pound); r; rotL ('X' (< r ; (c + i.pound)) } M)
  )
#+end_src

#+begin_src j
  step r0; c0; M
#+end_src

#+RESULTS:
#+begin_example
┌─┬─┬──────────┐
│1│4│....#.....│
│ │ │....X....#│
│ │ │....X.....│
│ │ │..#.X.....│
│ │ │....X..#..│
│ │ │....X.....│
│ │ │.#..X.....│
│ │ │........#.│
│ │ │#.........│
│ │ │......#...│
└─┴─┴──────────┘
#+end_example

#+begin_src j
  step^:(0 < 0{::[)^:_. r0; c0; M
#+end_src

#+RESULTS:
#+begin_example
┌─┬─┬──────────┐
│0│2│..X#......│
│ │ │..XXXXXXX#│
│ │ │.#XXXXXXX.│
│ │ │.XXXXXXX#.│
│ │ │.X.X.X.X..│
│ │ │.X#XXXXX..│
│ │ │.X...X.#..│
│ │ │.X...X....│
│ │ │#XXXXX....│
│ │ │.....#....│
└─┴─┴──────────┘
#+end_example

** Run
#+begin_src j :tangle yes
  +/+/'X' = 2{::step^:(0 < 0{::[)^:_. r0; c0; M
#+end_src

#+RESULTS:
: 41
#+begin_src emacs-lisp
  (org-babel-tangle)
#+end_src

Load with a display
#+begin_src j
  loadd 'day6.j'
#+end_src

#+RESULTS:
#+begin_example
f =: 'input.txt'

   d =: >'b' freads f

   rotR =: |."1 @: |:
   rotL =: rotR^:3

   M =: rotR d
   v0 =: {.|: I. '^' = M
   r0 =: {.I. 0 < v0
   c0 =: r0 { v0

   step =: 3 : 0
  'r c M' =. y
  pound =. (c}. r{M) i.'#'
  (((#M) - c) - pound); r; rotL ('X' (< r ; (c + i.pound)) } M)
)

   +/+/'X' = 2{::step^:(0 < 0{::[)^:_. r0; c0; M
5242
#+end_example

* org-configuration
#+STARTUP: align fold nodlcheck hidestars oddeven lognotestate
#+OPTIONS: ^:nil
#+property: header-args:emacs-lisp :results silent
# Local Variables:
# eval: (add-hook 'before-save-hook 'time-stamp nil t)
# time-stamp-active: t
# End:
